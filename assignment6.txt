ASSIGNMENT-6
Q1) Define a structure type auto t to represent an automobile. Include components for the make
and model (strings), the odometer reading, the manufacture and purchase dates (use another
user-defined type called date t ), and the gas tank (use a user-defined type tank t with com-
ponents for tank capacity and current fuel level, giving both in gallons). Write and test I/O
functions scan date, scan tank, scan auto, print date, print tank, and print auto.

#include <stdio.h>

struct auto_t{
    char make[20];
    char model[20];
};

struct date_t{
    double odometer_reading;
    int manufacture,purchase_date;
};

struct tank_t{
    double tank_capacity,current_fuel_level;
};

struct date_t scan_date()
{
    struct date_t d;
    printf("Enter manufacture year: ");
    scanf("%d",&d.manufacture);
    printf("Enter odometer reading: ");
    scanf("%lf",&d.odometer_reading);
    printf("Enter purchase date: ");
    scanf("%d",&d.purchase_date);
    return d;
}

struct tank_t scan_tank()
{
    struct tank_t t;
    printf("Enter tank capacity: (in gallons)");
    scanf("%lf",&t.tank_capacity);
    printf("Enter current fuel level (in gallons): ");
    scanf("%lf",&t.current_fuel_level);

    return t;
}

struct auto_t scan_auto()
{   
    struct auto_t a;
    printf("Enter make of the car: ");
    scanf("%s",&a.make);

    printf("Enter model of the car: ");
    scanf("%s",&a.model);

    return a;
}

void print_date(struct date_t d)
{
    printf("Manufature year is: %d\n",d.manufacture);
    printf("Odometer reading is: %lf\n",d.odometer_reading);
    printf("Purchase date is: %d\n",d.purchase_date);
}

void print_tank(struct tank_t t)
{
    printf("tank capacity is: %lf gallons.\n",t.tank_capacity);
    printf("current capacity is: %lf gallons.\n",t.current_fuel_level);
}

void print_auto(struct auto_t a)
{
    printf("Model is: %s\n",a.model);
    printf("Make is: %s\n",a.make);
}

int main()
{
    struct auto_t a=scan_auto();
    print_auto(a);

    struct date_t d=scan_date();
    print_date(d);

    struct tank_t t=scan_tank();
    print_tank(t);
}

Q2) Define a structure type element t to represent one element from the periodic table of elements.
Components should include the atomic number (an integer); the name, chemical symbol, and
class (strings); a numeric field for the atomic weight; and a seven-element array of integers
for the number of electrons in each shell. The following are the components of an element t
structure for sodium.

#include <stdio.h>

struct element_t{
    int atomic_num;
    char name[10];
    char symbol[2];
    char class[10];
    double atomic_wt;
    int electrons[7];
};

struct element_t scan_element()
{
    struct element_t e;
    printf("Enter atomic number: ");
    scanf("%d",&e.atomic_num);
    printf("Enter name of the element: ");
    scanf("%s",&e.name);
    printf("Enter symbol of the element: ");
    scanf("%s",&e.symbol);
    printf("Enter class of the element: ");
    scanf("%s",&e.class);
    printf("Enter atomic weight: ");
    scanf("%lf",&e.atomic_wt);

    printf("Enter electron configuration for: \n");

    for(int i=0;i<7;i++)
    {
        printf("%d shell:\n",i+1);
        scanf("%d",&e.electrons[i]);
    }
    return e;
}

void print_element(struct element_t e)
{
    printf("%d %s  %s  %s %lf ",e.atomic_num,e.name,e.symbol,e.class,e.atomic_wt);

    for(int i=0;i<=6;i++)
    {
        printf("%d ",e.electrons[i]);
    }
}

int main()
{
    struct element_t e=scan_element();
    print_element(e);
    return 0;
}